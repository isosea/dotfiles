#!/bin/bash
{{- if not (eq (env "CI") "true") -}}

{{ if eq .chezmoi.os "darwin" -}}

set -euo pipefail

CONFIG_FILE="$HOME/.local/share/chezmoi/.chezmoidata/packages.yaml"

need() { command -v "$1" >/dev/null 2>&1 || { echo "$1 が必要です"; exit 1; }; }
need yq
need fzf
need brew

BREWS_FILE="$(mktemp)"; CASKS_FILE="$(mktemp)"; CHOICES_FILE="$(mktemp)"
cleanup() { rm -f "$BREWS_FILE" "$CASKS_FILE" "$CHOICES_FILE"; }
trap 'cleanup' 0 1 2 15

# YAML から候補を抽出（null行は捨てる）
yq -r '.packages.darwin.available_brews[]?'  "$CONFIG_FILE" 2>/dev/null | sed '/^null$/d' > "$BREWS_FILE" || true
yq -r '.packages.darwin.available_casks[]?' "$CONFIG_FILE" 2>/dev/null | sed '/^null$/d' > "$CASKS_FILE" || true

if [ ! -s "$BREWS_FILE" ] && [ ! -s "$CASKS_FILE" ]; then
  echo "選択肢がありません（$CONFIG_FILE を確認してください）"
  exit 1
fi

# ヘッダー（選択不可の見出し）
HEADER="== BREW =="
if [ -s "$BREWS_FILE" ]; then
  HEADER="$HEADER
$(cat "$BREWS_FILE")"
else
  HEADER="$HEADER
(なし)"
fi
HEADER="$HEADER
== CASK =="
if [ -s "$CASKS_FILE" ]; then
  HEADER="$HEADER
$(cat "$CASKS_FILE")"
else
  HEADER="$HEADER
(なし)"
fi

# 実際に選べる行（1列目:パッケージ名 / 2列目:種別）。先頭にキャンセル用を入れる
printf '［何もしない］\tnone\n' > "$CHOICES_FILE"
if [ -s "$BREWS_FILE" ]; then
  while IFS= read -r p; do
    [ -n "$p" ] && printf '%s\tbrew\n' "$p" >> "$CHOICES_FILE"
  done < "$BREWS_FILE"
fi
if [ -s "$CASKS_FILE" ]; then
  while IFS= read -r p; do
    [ -n "$p" ] && printf '%s\tcask\n' "$p" >> "$CHOICES_FILE"
  done < "$CASKS_FILE"
fi

# fzf 起動（複数選択可、表示は1列目のみ）
SELECTED="$(fzf -m \
  --with-nth=1 \
  --prompt='インストールするパッケージを選んでください > ' \
  --header="$HEADER" < "$CHOICES_FILE" || true)"

# Esc / 何も選ばない → 何もせず終了
[ -z "$SELECTED" ] && exit 0

# 「［何もしない］」が含まれてたら終了
printf '%s\n' "$SELECTED" | awk -F '\t' '$2=="none"{f=1} END{exit !f}' && exit 0

# まとめてインストール
printf '%s\n' "$SELECTED" | while IFS="$(printf '\t')" read -r PKG TYPE; do
  case "$TYPE" in
    brew) echo "==> brew install $PKG"; brew install "$PKG" ;;
    cask) echo "==> brew install --cask $PKG"; brew install --cask "$PKG" ;;
  esac
done

{{ end -}}

{{- else -}}
echo "CI detected. Skipping Homebrew bootstrap."
{{- end -}}
